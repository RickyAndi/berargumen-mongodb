extends layouts/main.pug

block stylehead
	link(rel='stylesheet' href='/bower_components/bootstrap-tagsinput/dist/bootstrap-tagsinput.css')
	link(rel='stylesheet' href='/styles/smt-bootstrap.css')
	meta(name='userId' content=profileUser._id)

	style().
		
		.pagination > li.active > a {
			background-color: #22be34 !important;
			border-color: #22be34 !important;
		}

		.btn-in-table {
			margin-right: 1px;
			margin-left: 1px;
		}

		* {
			font-family: "Times New Roman", Georgia, Serif;
		}

block content
	div(class='container' style="margin-top:5%;")
		div(class='row')
			div(class='col-md-12')
				div(class='panel panel-default')
					div(class='panel-heading')
						h5 Profil Pengguna
					div(class='panel-body')
						div(class='row')
							div(class='col-md-6')
								table(class='table table-default table-bordered')
									tbody()
										tr()
											td()
												strong Gambar Profil
											td(class='text-center')
												img(src=profileUser.profilePicUrl)
										tr()
											td()
												strong Nama
											td(class='text-center')= profileUser.name
			
			div(class='col-md-12' id="board-panel")
				div(class='panel panel-default')
					div(class='panel-heading')
						h5 Boards
					div(class='panel-body' style="min-height: 300px;")
						div(class='row')
							div(class='col-md-12')
								table(class='table table-default table-bordered')
									thead()
										tr()
											th(class='text-center' width="20%") Judul
											th(class='text-center' width="40%") Deskripsi
											th(class='text-center' width="20%") Tags
											th(class='text-center' width="10%") Diperbaharui
											th(class='text-center' width="10%") 
									tbody(v-if="boards.length")
										tr(v-for="board in boards")
											td() {{ board.getTitle() }}
											td() {{ board.getDescription() }}
											td() 
												button(class='btn btn-default btn-xs btn-in-table' v-for="tag in board.getTags()" @click="viewBoardByTag(tag)") {{ tag }}
											td(class='text-center') {{ board.getUpdatedDate() }}
											td(class='text-center')
												button(@click="viewBoard(board.getId())" class='btn btn-warning btn-xs') Lihat
									tbody(v-if="!boards.length")
										tr()
											td(class='text-center' colspan="5") Tidak ada board

								div(class='row')
										div(class='col-md-12')
											ul(class='pagination')
												li(v-for='page in numberOfPages' v-if="!displayPaginationButton(currentPage, page)" v-bind:class="{ 'active' : currentPage == page }")
													a(@click="boardsGoToPage(page)") {{ page }}				
block script
	script(type='text/javascript' src='/bower_components/jquery/dist/jquery.js')
	script(type='text/javascript' src='/bower_components/bootstrap/dist/js/bootstrap.js')
	script(type='text/javascript' src='/bower_components/vue/dist/vue.js')
	script(type='text/javascript' src='/bower_components/moment/moment.js')
	script(type='text/javascript' src='/models/board.js')

	script(type='text/javascript').
		var app = new Vue({
			el: '#board-panel',
			data : {
				boards : [],
				userId : null,
				currentPage : 1,
				numberOfPages : 0
			},
			methods : {
				getBoards : function(page) {
					
					var vm = this;
					
					var url = '/api/user/' + this.userId + '/boards';
					var request = $.get({
						url : url,
						data : {
							page : page == null ? 1 : page
						}
					})

					return request
						.then(function(boards) {
							vm.boards.splice(0, vm.boards.length)

							vm.numberOfPages = boards.pages;

							boards.docs.forEach(function(board) {
								var updatedDate = moment(board.updated).format('D-MM-YYYY');
								var toBePushedboard  = new Board(board._id, board.title, board.description, null, updatedDate, board.tags);

								vm.boards.push(toBePushedboard);
							})
						})
						.catch(function() {

						})
				},
				displayPaginationButton : function(currentPage, page) {
					return (currentPage - 2) > page || (currentPage + 2) < page  
				},
				boardsGoToPage : function(page) {
					this.currentPage = page;
					this.getBoards(page);
				},
				viewBoard : function(boardId) {
					var url = '/board/' + boardId;
					window.open(url);
				},
				viewBoardByTag : function(tag) {
					var url = '/tag/board?tag=' + tag;
					window.open(url);
				}
			},
			mounted : function() {
				this.userId = $('meta[name=userId]').attr("content");
				
				this.getBoards();
			}

		})
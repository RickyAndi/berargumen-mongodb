extends layouts/main.pug

block stylehead
	link(rel='stylesheet' href='/bower_components/bootstrap-tagsinput/dist/bootstrap-tagsinput.css')
	link(rel='stylesheet' href='/styles/smt-bootstrap.css')
	style(type='text/css').
		
		div.bootstrap-tagsinput {
			float:right; 
			width: 100%;
		}

		.navbar-lower {
			top: 50px;
		    z-index: 1029;
		    background-color : rgb(253,224,193);
		}

		.btn-in-table {
			margin-right: 1px;
			margin-left: 1px;
		}

		.pagination > li.active > a {
			background-color: #22be34 !important;
			border-color: #22be34 !important;
		}

		* {
			font-family: "Times New Roman", Georgia, Serif;
		}

block content
	div(class='navbar navbar-fixed-top navbar-default navbar-lower' role='navigation')
		div(class='container')
			div(class='pull-right')
				button(class='btn btn-primary navbar-btn btn-sm' @click="openModalToCreateBoard()") Buat Board

	div(class='container')
		div(class='row')
			div(class='col-md-12' style="margin-top: 10%;")
				div(class='panel panel-default')
					div(class='panel-body')
						div(class='row')
							div(class='col-md-6')
								div(class='panel panel-default')
									div(class='panel-heading')
										p Saya
									div(class='panel-body')
										table(class='table table-default table-bordered table-striped')
											tbody()
												tr()
													th Nama
													td= user.name

							div(class='col-md-12')
								div(class='panel panel-default')
									div(class='panel-heading')
										p Board Saya
									div(class='panel-body' style="min-height:400px;")
										table(class='table table-default table-bordered table-striped')
											thead()
												tr()
													th(width="25%") Judul
													th(width="25%") Deskripsi
													th(width="25%") Tags
													th(width="10%" class='text-center') Aksi
											tbody()
												tr(v-for="(board, index) in boards")
													td() {{ board.getTitle() }}
													td() {{ board.getDescription() }}
													td()
														button(class='btn btn-default btn-xs btn-in-table' v-for="tag in board.getTags()" @click="viewBoardByTag(tag)") {{ tag }}
													td(class="text-center")
														button(class='btn btn-warning btn-xs' @click="viewBoard(board.getId())") Lihat
														button(@click="openModalToEditBoard(index)" class='btn btn-success btn-xs btn-in-table') Ubah
										div(class='row')
		
											div(class='col-md-6')
												ul(class='pagination')
													li(v-for='page in numberOfPages' v-if="!displayPaginationButton(currentPage, page)" v-bind:class="{ 'active' : currentPage == page }")
														a(@click="boardsGoToPage(page)") {{ page }}

	div(class="modal fade bs-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" id="createBoardModal")
		div(class="modal-dialog modal-lg" role="document")
			div(class="modal-content")
				div(class="modal-header")
					div(class='row')
						div(class='col-md-12')
							h4(v-if="forms.createBoard.status == 'create-board'") Buat Board
							h4(v-if="forms.createBoard.status == 'edit-board'") Ubah Board
				div(class="modal-body")
					div(class="row")
						div(class="col-md-12")
							div(class="form-group")
								label() Judul
								input(v-model="forms.createBoard.title" class="form-control")
							div(class="form-group")
								label() Deskripsi
								textarea(v-model="forms.createBoard.description" class="form-control")
							div(class="form-group")
								label() Tags
								input(type="text" id="tagsinput")
								br()
								p(style="font-size:13px;") Untuk menambah tags, isikan kata lalu tekan 
									strong() Enter
							div(class="form-group")
								button(v-if="forms.createBoard.status == 'create-board'" class='btn btn-primary btn-sm' @click='createBoard()') Buat
								button(v-if="forms.createBoard.status == 'edit-board'" class='btn btn-success btn-sm' @click='editBoard()') Ubah
								button(class='btn btn-warning btn-sm' @click='hideCreateBoardModal()') Tutup


block script
	script(type='text/javascript' src='bower_components/jquery/dist/jquery.js')
	script(type='text/javascript' src='bower_components/bootstrap/dist/js/bootstrap.js')
	script(type='text/javascript' src='/bower_components/bootstrap-tagsinput/dist/bootstrap-tagsinput.js')
	script(type='text/javascript' src='bower_components/vue/dist/vue.js')
	script(type='text/javascript' src='models/board.js')

	script(type='text/javascript').
		var app = new Vue({
			el : '#app',
			data : {
				forms : {
					createBoard : {
						title : '',
						description : '',
						tags : '',
						status : 'create-board'
					}
				},
				toBe : {
					indexBoardEdited : null
				},
				inputs : {
					tags : null
				},
				numberOfPages : 0,
				currentPage : 1,
				modals : {
					createBoardModal : null
				},
				boards : []
			},
			methods : {
				openCreateBoardModal : function() {
					this.modals.createBoardModal.modal({
						backdrop: 'static',
						keyboard: false
					})
				},
				hideCreateBoardModal : function() {
					this.modals.createBoardModal.modal('hide')
				},
				createBoard : function() {
					
					var vm = this;

					vm.forms.createBoard.tags = vm.inputs.tags.val();

					var request = $.post({
						url : '/api/board',
						data : JSON.stringify(vm.forms.createBoard),
						contentType : 'application/json; charset=UTF-8',
					});

					request
						.then(function(newBoard) {
							vm.getBoards(vm.currentPage).then(function() {
								vm.hideCreateBoardModal();
							});
						})
						.catch(function(error) {
							console.log(error)
						})
				},
				editBoard : function() {

					var vm = this;

					var boardIdToBeEdited = this.boards[this.toBe.indexBoardEdited].getId();
					var url = '/api/board/' + boardIdToBeEdited + '/update';

					vm.forms.createBoard.tags = vm.inputs.tags.val();

					var request = $.post({
						url : url,
						data : JSON.stringify(vm.forms.createBoard),
						contentType : 'application/json; charset=UTF-8',
					});

					return request
						.then(function() {
							vm.getBoards(vm.currentPage).then(function() {
								vm.hideCreateBoardModal();
							});
						})
						.catch(function(error) {
							console.log(error);
							alert('Errro Happen')
							vm.hideCreateBoardModal();
						})

				},
				getBoards : function(page) {
					var vm = this;

					var request = $.get({
						url : '/api/my-boards',
						data: { 
						   page: page == null ? 1 : page, 
						},
					});

					return request
						.then(function(boards) {

							vm.boards.splice(0, vm.boards.length)
							vm.numberOfPages = boards.pages;

							boards.docs.forEach(function(board) {
								
								var toBePushedboard  = new Board();
								
								toBePushedboard
									.setId(board._id)
									.setTitle(board.title)
									.setDescription(board.description)
									.setTags(board.tags);

								vm.boards.push(toBePushedboard);
							})
						})
						.catch(function(error) {
							console.log(error)
						})
				},
				viewBoard : function(boardId) {
					var url = '/board/' + boardId;
					window.open(url);
				},
				boardsGoToPage : function(page) {
					this.currentPage = page;
					this.getBoards(page);
				},
				displayPaginationButton : function(currentPage, page) {
					return (currentPage - 2) > page || (currentPage + 2) < page  
				},
				openModalToCreateBoard :function() {
					this.forms.createBoard.status = 'create-board';
					this.openCreateBoardModal();
				},
				openModalToEditBoard : function(index) {
					
					var vm = this;

					this.forms.createBoard.status = 'edit-board';
					this.toBe.indexBoardEdited = index;

					this.boards[index].getTags().forEach(function(tag) {
						vm.inputs.tags.tagsinput('add', tag);
					});

					vm.forms.createBoard.title = vm.boards[index].getTitle();
					vm.forms.createBoard.description = vm.boards[index].getDescription();

					vm.openCreateBoardModal();
				},
				viewBoardByTag : function(tag) {
					var url = '/tag/board?tag=' + tag;
					window.open(url);
				}
			},
			mounted : function() {
				
				var vm = this;

				vm.inputs.tags =  $('#tagsinput');
				vm.inputs.tags.tagsinput();

				vm.modals.createBoardModal = $('#createBoardModal');
				
				vm.modals.createBoardModal.on('hidden.bs.modal', function() {
					vm.forms.createBoard.title = '';
					vm.forms.createBoard.description = '';
					vm.inputs.tags.tagsinput('removeAll');
				})

				vm.getBoards();
			}
		})